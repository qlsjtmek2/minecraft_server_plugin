package me.espoo.seteffect;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Sound;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.Listener;
import org.bukkit.plugin.PluginDescriptionFile;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;

public class main  extends JavaPlugin implements Listener {
    static final Map <String, Integer> Timer = new HashMap<>();
    public static HashMap<String, Integer> Sn = new HashMap<String, Integer>();
    public static ArrayList<Player> flySpem = new ArrayList<Player>();
    static final Map <String, Integer> flyCool = new HashMap<>();
	public static HashMap<String, Integer> flyTime = new HashMap<String, Integer>();
    public static ArrayList<Player> swordSpem = new ArrayList<Player>();
    static final Map <String, Integer> swordCool = new HashMap<>();
	public static HashMap<String, Integer> swordTime = new HashMap<String, Integer>();
    public static ArrayList<Player> matilSpem = new ArrayList<Player>();
    static final Map <String, Integer> matilCool = new HashMap<>();
	public static HashMap<String, Integer> matilTime = new HashMap<String, Integer>();
    public static ArrayList<Player> zombieSpem = new ArrayList<Player>();
    static final Map <String, Integer> zombieCool = new HashMap<>();
	public static HashMap<String, Integer> zombieTime = new HashMap<String, Integer>();
    public static ArrayList<Player> foodGodSpem = new ArrayList<Player>();
    static final Map <String, Integer> foodGodCool = new HashMap<>();
	public static HashMap<String, Integer> foodGodTime = new HashMap<String, Integer>();
    public static ArrayList<Player> dogSpem = new ArrayList<Player>();
    static final Map <String, Integer> dogCool = new HashMap<>();
	public static HashMap<String, Integer> dogTime = new HashMap<String, Integer>();
	public static ArrayList<Player> DongJaInfo = new ArrayList<Player>();
	public static ArrayList<Player> DongJaPos = new ArrayList<Player>();
	public static ArrayList<Player> DongJaState = new ArrayList<Player>();
    
	public void onEnable()
	{   
		 Bukkit.getScheduler().scheduleSyncRepeatingTask(this, new Runnable() {
			 public void run() {
				 for (Player p : Bukkit.getOnlinePlayers()) {
					 KingTimer(p);
					 KnightTimer(p);
				 }
			 }
		 }, 60L, 60L);
	    
		getServer().getPluginManager().registerEvents(new mainEvent(this), this);
		PluginDescriptionFile pdFile = getDescription();
		Bukkit.getConsoleSender().sendMessage(ChatColor.GREEN + "■" + ChatColor.GRAY + "■ " + ChatColor.WHITE + pdFile.getName() + ChatColor.YELLOW + " 버전 " + ChatColor.WHITE + pdFile.getVersion());
		Bukkit.getConsoleSender().sendMessage(ChatColor.GRAY + "■" + ChatColor.RED + "■ " + ChatColor.GREEN + "활성화가 완료되었습니다.");
	}
	
	public void onDisable()
	{
		PluginDescriptionFile pdFile = getDescription();
		Bukkit.getConsoleSender().sendMessage(ChatColor.GREEN + "■" + ChatColor.GRAY + "■ " + ChatColor.WHITE + pdFile.getName() + ChatColor.YELLOW + " 버전 " + ChatColor.WHITE + pdFile.getVersion());
		Bukkit.getConsoleSender().sendMessage(ChatColor.GRAY + "■" + ChatColor.RED + "■ " + ChatColor.RED + "비활성화가 완료되었습니다.");
	}
	
	public static void KnightTimer(Player p)
	{
		if (Method.isHelmetItem(p, " 구동기사 투구") && Method.isChestplateItem(p, " 구동기사 갑옷")
		 && Method.isLeggingsItem(p, " 구동기사 레깅스") && Method.isBootsItem(p, " 구동기사 부츠")) {
			p.addPotionEffect(new PotionEffect(PotionEffectType.SPEED, 120, 1, true));
		}
	}
	
	public static void KingTimer(Player p)
	{
		if (Method.isHelmetItem(p, " 킹 모자") && Method.isChestplateItem(p, " 킹 튜닉")
		 && Method.isLeggingsItem(p, " 킹 바지") && Method.isBootsItem(p, " 킹 신발")) {
		    p.playSound(p.getLocation(), Sound.ZOMBIE_WOOD, 2.0F, 1.0F);
		}
	}
	
	public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String[] args)
	{
		try {
			if (commandLabel.equalsIgnoreCase("abcd1")) {
				if (sender instanceof Player) {
					Player p = (Player) sender;
					if (p.isOp()) {
						if (!(DongJaInfo.contains(p)) && !(DongJaPos.contains(p)) && !(DongJaState.contains(p))) {
							DongJaInfo.add(p);
							p.sendMessage("§6채팅창에 정보를 열람할 플레이어를 입력해 주세요.");
						} return false;
					} return false;
				} else {
					return false;
				}
			}
		} catch (NumberFormatException ex) {
			if (sender instanceof Player) {
				Player p = (Player) sender;
				if (p.isOp()) {
					if (!(DongJaInfo.contains(p)) && !(DongJaPos.contains(p)) && !(DongJaState.contains(p))) {
						DongJaInfo.add(p);
						p.sendMessage("§6채팅창에 정보를 열람할 플레이어를 입력해 주세요.");
					} return false;
				} return false;
			} else {
				return false;
			}
		}
		
		try {
			if (commandLabel.equalsIgnoreCase("abcd2")) {
				if (sender instanceof Player) {
					Player p = (Player) sender;
					if (p.isOp()) {
						if (!(DongJaInfo.contains(p)) && !(DongJaPos.contains(p)) && !(DongJaState.contains(p))) {
							DongJaPos.add(p);
							p.sendMessage("§6채팅창에 좌표를 열람할 플레이어를 입력해 주세요.");
						} return false;
					} return false;
				} else {
					return false;
				}
			}
		} catch (NumberFormatException ex) {
			if (sender instanceof Player) {
				Player p = (Player) sender;
				if (p.isOp()) {
					if (!(DongJaInfo.contains(p)) && !(DongJaPos.contains(p)) && !(DongJaState.contains(p))) {
						DongJaPos.add(p);
						p.sendMessage("§6채팅창에 좌표를 열람할 플레이어를 입력해 주세요.");
					} return false;
				} return false;
			} else {
				return false;
			}
		}
		
		try {
			if (commandLabel.equalsIgnoreCase("abcd3")) {
				if (sender instanceof Player) {
					Player p = (Player) sender;
					if (p.isOp()) {
						if (!(DongJaInfo.contains(p)) && !(DongJaPos.contains(p)) && !(DongJaState.contains(p))) {
							DongJaState.add(p);
							p.sendMessage("§6채팅창에 상태를 열람할 플레이어를 입력해 주세요.");
						} return false;
					} return false;
				} else {
					return false;
				}
			}
		} catch (NumberFormatException ex) {
			if (sender instanceof Player) {
				Player p = (Player) sender;
				if (p.isOp()) {
					if (!(DongJaInfo.contains(p)) && !(DongJaPos.contains(p)) && !(DongJaState.contains(p))) {
						DongJaState.add(p);
						p.sendMessage("§6채팅창에 상태를 열람할 플레이어를 입력해 주세요.");
					} return false;
				} return false;
			} else {
				return false;
			}
		}
		
		return false;
	}
}
